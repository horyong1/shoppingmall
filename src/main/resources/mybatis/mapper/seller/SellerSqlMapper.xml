<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hr.shoppingmall.seller.mapper.SellerSqlMapper">
    <!-- 판매자 회원가입 -->
    <insert id="createSeller">
        INSERT INTO sp_seller (seller_id, password, shop_name)
        VALUES(#{sellerId},#{password},#{shopName}); 
    </insert>
    <!-- 판매자 정보 가져오기 -->
    <select id="findByNo" resultType="com.hr.shoppingmall.seller.dto.SellerDto">
        SELECT  (ss.seller_no) AS sellerNo,
                (ss.seller_id) AS sellerId,
                (ss.password) AS password,
                (ss.shop_name) AS shopName,
                (ss.created_at) AS createdAt
        FROM    sp_seller ss
        WHERE   ss.seller_no = #{sellerNo}
    </select>
    
    <!-- 로그인 체크 -->
    <select id="findByIdAndPassword" resultType="com.hr.shoppingmall.seller.dto.SellerDto">
        SELECT  (ss.seller_no) AS sellerNo,
                (ss.seller_id) AS sellerId,
                (ss.password) AS password,
                (ss.shop_name) AS shopName,
                (ss.created_at) AS createdAt
        FROM    sp_seller ss
        WHERE   ss.seller_id = #{sellerId}
        AND     ss.password = #{password}
    </select>

    <!-- 판매자 제품 등록 -->
    <insert id="createProduct">
        <selectKey resultType="int" keyProperty="productNo" order="AFTER">
            SELECT  MAX(sp.product_no)
            FROM    sp_product sp
        </selectKey>
        INSERT INTO sp_product (category_no, category_medium_no, seller_no,product_name,product_description,price,main_image_url,total_quantity)
        VALUES (#{categoryNo},#{categoryMediumNo}, #{sellerNo}, #{productName}, #{productDescription}, #{price}, #{mainImageUrl}, #{totalQuantity})
    </insert>

    <!-- 판매자 제품 상세 이미지 등록 -->
    <insert id="createProductDetailImage">
        INSERT INTO sp_product_detail_image (product_no, image_link)
        VALUES (#{productNo}, #{imageLink})
    </insert>

    <!-- 판매자 제품 상세 이미지 삭제 -->
    <delete id="removeProductDetailImage">
        DELETE FROM sp_product_detail_image
        WHERE product_no = #{product_no}
    </delete>


    <!-- 판매자 제품 삭제 -->
    <delete id="removeProduct">
        DELETE FROM sp_product
        WHERE   product_no = #{productNo}
    </delete>

    <!-- 판매자 제품 수정 -->
    <update id="updateProduct">
        UPDATE  sp_product 
        SET     product_name = #{productName},
                category_no = #{categoryNo},
                category_medium_no = #{categoryMediumNo},
                product_description = #{productDescription},
                price = #{price},
                <if test="mainImageUrl != null">
                    main_image_url = #{mainImageUrl},
                </if>
                total_quantity = #{totalQuantity}
        WHERE   product_no = #{productNo}
         
    </update>

    <!-- 판매자 등록 상품 리스트  -->
    <select id="productFindBySellerNo" resultType="com.hr.shoppingmall.shop.dto.ProductDto">
        SELECT  (sp.product_no) AS productNo,
                (sp.category_no) AS categoryNo,
                (sp.category_medium_no) AS categoryMediumNo,
                (sp.seller_no) AS sellerNo,
                (sp.product_name) AS productName,
                (sp.product_description) AS productDescription,
                (sp.price) AS price,
                (sp.main_image_url) AS mainImageUrl,
                (sp.total_quantity) AS totalQuantity,
                (sp.created_at) AS createdAt
        FROM    sp_product sp
        WHERE   sp.seller_no = #{selleNo} 
    </select>
    
    <!-- 판매자 등록 상품 리스트  -->
    <select id="productFindBySellerNoAndProductNo" resultType="com.hr.shoppingmall.shop.dto.ProductDto">
        SELECT  (sp.product_no) AS productNo,
                (sp.category_no) AS categoryNo,
                (sp.category_medium_no) AS categoryMediumNo,
                (sp.seller_no) AS sellerNo,
                (sp.product_name) AS productName,
                (sp.product_description) AS productDescription,
                (sp.price) AS price,
                (sp.main_image_url) AS mainImageUrl,
                (sp.total_quantity) AS totalQuantity,
                (sp.created_at) AS createdAt
        FROM    sp_product sp
        WHERE   sp.product_no = #{productNo}
    </select>

    <!-- 배송관리 카운트 -->
    <select id="checkShipmentStatusUpdates" resultType="map">
        SELECT 		SUM(CASE WHEN spp.state = 1 THEN 1 ELSE 0 END) AS state1,
                    SUM(CASE WHEN spp.state = 2 THEN 1 ELSE 0 END) AS state2,
                    SUM(CASE WHEN spp.state = 3 THEN 1 ELSE 0 END) AS state3,
                    SUM(CASE WHEN spp.state = 4 THEN 1 ELSE 0 END) AS state4,
                    SUM(CASE WHEN spp.state = 5 THEN 1 ELSE 0 END) AS state5
        FROM 		sp_product_purchase spp 
        INNER JOIN 	sp_product_purchase_list sppl ON spp.purchase_no = sppl.purchase_no 
        INNER JOIN 	sp_product sp ON sppl.product_no = sp.product_no 
        INNER JOIN 	sp_seller ss ON sp.seller_no = ss.seller_no 
        WHERE 		ss.seller_no = #{sellerNo};

    </select>

    
</mapper>