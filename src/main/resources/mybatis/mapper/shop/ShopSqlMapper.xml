<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hr.shoppingmall.shop.mapper.ShopSqlMapper">
    <!-- 상품 카테고리 전체 목록 -->
    <select id="categoryFindAll" resultType="com.hr.shoppingmall.shop.dto.ProductCategoryDto">
        SELECT  (spc.category_no) AS categoryNo,
                (spc.category_name) AS categoryName,
                (spc.created_at) AS createdAt
        FROM    sp_product_category spc
    </select>

    <!-- 상품 목록 카테고리별로 메인페이지 보여줄 6개만 가져오기 -->
    <select id="productLimitFindCategoryId" resultType="com.hr.shoppingmall.shop.dto.ProductDto">
        SELECT  (sp.product_no) AS productNo,
                (sp.category_no) AS categoryNo,
                (sp.seller_no) AS sellerNo,
                (sp.product_name) AS productName,
                (sp.product_description) AS productDescription,
                (sp.price) AS price,
                (sp.main_image_url) AS mainImageUrl,
                (sp.total_quantity) AS totalQuantity,
                (sp.created_at) AS createdAt
        FROM    sp_product sp
        WHERE   category_no = #{categoryNo}
        LIMIT   0,6
    </select>
    
    <!-- 상품 목록 카테고리별 리스트 보여주기 -->
    <select id="productFindCategoryId" resultType="com.hr.shoppingmall.shop.dto.ProductDto">
        SELECT  (sp.product_no) AS productNo,
                (sp.category_no) AS categoryNo,
                (sp.seller_no) AS sellerNo,
                (sp.product_name) AS productName,
                (sp.product_description) AS productDescription,
                (sp.price) AS price,
                (sp.main_image_url) AS mainImageUrl,
                (sp.total_quantity) AS totalQuantity,
                (sp.created_at) AS createdAt
        FROM    sp_product sp
        WHERE   category_no = #{categoryNo}
    </select>

    <!-- 상품 상세 정보  -->
    <select id="findByProductNo" resultType="com.hr.shoppingmall.shop.dto.ProductDto">
        SELECT  (sp.product_no) AS productNo,
                (sp.category_no) AS categoryNo,
                (sp.seller_no) AS sellerNo,
                (sp.product_name) AS productName,
                (sp.product_description) AS productDescription,
                (sp.price) AS price,
                (sp.main_image_url) AS mainImageUrl,
                (sp.total_quantity) AS totalQuantity,
                (sp.created_at) AS createdAt
        FROM    sp_product sp
        WHERE   sp.product_no = #{productNo} 
    </select>

    <!-- 상품구매 -->
    <insert id="createPurchase">
        <selectKey resultType="int" keyProperty="purchaseNo" order="AFTER">
            SELECT MAX(spp.purchase_no)
            FROM sp_product_purchase spp
            WHERE spp.consumer_no = #{consumerNo} AND spp.state = 1
        </selectKey>
        INSERT INTO sp_product_purchase (consumer_no,product_no,quantity,shopping_adress,state)
        VALUES(#{consumerNo},#{productNo}, #{quantity}, #{shoppingAdress},1)
    </insert>
    <!-- 상품 수량 감소 -->
    <update id="updateTotalQuantity">
        UPDATE  sp_product 
        SET     total_quantity = total_quantity - #{quantity}
        WHERE   product_no = #{productNo}

    </update>

    <!-- 고객 상품구매 목록 -->
    <select id="purchaseFindByConsumerNo" resultType="com.hr.shoppingmall.shop.dto.ShoppingPurchaseDto">
        SELECT 	(spp.purchase_no) AS purchaseNo,
                (spp.consumer_no) AS consumerNo,
                (spp.product_no) AS productNo,
                (spp.quantity) AS quantity,
                (spp.shopping_adress) AS shopping_adress,
                (spp.purchase_date) AS purchaseDate,
                (spp.state) AS state
        FROM 	sp_product_purchase spp 
        WHERE 	spp.consumer_no = #{consumerNo}
        ORDER BY spp.purchase_date DESC
    </select>
    <!-- 고객 상품 구매 상세 목록 -->
    <select id="purchaseFindByConsumerNoAndPurchaseNo" resultType="com.hr.shoppingmall.shop.dto.ShoppingPurchaseDto">
        SELECT 	(spp.purchase_no) AS purchaseNo,
                (spp.consumer_no) AS consumerNo,
                (spp.product_no) AS productNo,
                (spp.quantity) AS quantity,
                (spp.shopping_adress) AS shopping_adress,
                (spp.purchase_date) AS purchaseDate,
                (spp.state) AS state
        FROM 	sp_product_purchase spp 
        WHERE 	spp.consumer_no = #{consumerNo}
        AND		spp.purchase_no = #{purchaseNo}
    </select>

    <!-- 고객 상품 구매 결제완료 번호 가져오기 -->
    <!-- <select id="maxPurchaseNo" resultType="int">
        SELECT MAX(spp.purchase_no)
        FROM sp_product_purchase spp
        WHERE spp.consumer_no = #{consumerNo}
    </select> -->
</mapper>