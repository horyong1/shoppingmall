<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hr.shoppingmall.shop.mapper.ShopSqlMapper">
    <!-- 상품 카테고리 대분류 전체 목록 -->
    <select id="categoryFindAll" resultType="com.hr.shoppingmall.shop.dto.ProductCategoryDto">
        SELECT  (spc.category_no) AS categoryNo,
                (spc.category_name) AS categoryName,
                (spc.created_at) AS createdAt
        FROM    sp_product_category spc
    </select>

    <!-- 상품 카테고리 특정 대분류 -->
    <select id="categoryFindByCategoryNo" resultType="com.hr.shoppingmall.shop.dto.ProductCategoryDto">
        SELECT  (spc.category_no) AS categoryNo,
                (spc.category_name) AS categoryName,
                (spc.created_at) AS createdAt
        FROM    sp_product_category spc
        WHERE   spc.category_no = #{categoryNo}
    </select>

    <!-- 카테고리 중분류 리스트 -->
    <select id="categoryMediumFindAll" resultType="com.hr.shoppingmall.shop.dto.ProductCategoryMediumDto">
        SELECT  (spcm.category_medium_no) AS categoryMediumNo,
                (spcm.category_no) AS categoryNo,
                (spcm.category_medium_name) AS categoryMediumName,
                (spcm.created_at) AS createdAt
        FROM    sp_product_category_medium spcm
    </select>

    <!-- 상품 카테고리 대분류 기준 중분류 리스트 -->
    <select id="categoryMediumFindByCategoryNo" resultType="com.hr.shoppingmall.shop.dto.ProductCategoryMediumDto">
        SELECT  1 AS categoryMediumNo,
                #{categoryNo} AS categoryNo,
                '전체' AS categoryMediumName,
                NULL AS createdAt
        UNION ALL
        SELECT  (spcm.category_medium_no) AS categoryMediumNo,
                (spcm.category_no) AS categoryNo,
                (spcm.category_medium_name) AS categoryMediumName,
                (spcm.created_at) AS createdAt
        FROM    sp_product_category_medium spcm
        WHERE   spcm.category_no = #{categoryNo}
    </select>

    <!-- 상품 목록 카테고리별로 메인페이지 보여줄 6개만 가져오기 -->
    <select id="productLimitFindCategoryId" resultType="com.hr.shoppingmall.shop.dto.ProductDto">
        SELECT  (sp.product_no) AS productNo,
                (sp.category_no) AS categoryNo,
                (sp.category_medium_no) AS categoryMediumNo,
                (sp.seller_no) AS sellerNo,
                (sp.product_name) AS productName,
                (sp.product_description) AS productDescription,
                (sp.price) AS price,
                (sp.main_image_url) AS mainImageUrl,
                (sp.total_quantity) AS totalQuantity,
                (sp.created_at) AS createdAt
        FROM    sp_product sp
        WHERE   category_no = #{categoryNo}
        <if test="limit > 0">
            LIMIT #{limit}
        </if>
    </select>
    
    <!-- 상품 목록 카테고리별 리스트 보여주기 -->
    <select id="productFindCategoryId" resultType="com.hr.shoppingmall.shop.dto.ProductDto">
        SELECT  (sp.product_no) AS productNo,
                (sp.category_no) AS categoryNo,
                (sp.category_medium_no) AS categoryMediumNo,
                (sp.seller_no) AS sellerNo,
                (sp.product_name) AS productName,
                (sp.product_description) AS productDescription,
                (sp.price) AS price,
                (sp.main_image_url) AS mainImageUrl,
                (sp.total_quantity) AS totalQuantity,
                (sp.created_at) AS createdAt
        FROM    sp_product sp
        <if test="categoryNo != 1">
            WHERE   category_no = #{categoryNo}
            <if test="categoryMediumNo != null and categoryMediumNo != 1">
                AND sp.category_medium_no =#{categoryMediumNo}
            </if>
        </if>

    </select>

    <!-- 상품 상세 정보  -->
    <select id="findByProductNo" resultType="com.hr.shoppingmall.shop.dto.ProductDto">
        SELECT  (sp.product_no) AS productNo,
                (sp.category_no) AS categoryNo,
                (sp.category_medium_no) AS categoryMediumNo,
                (sp.seller_no) AS sellerNo,
                (sp.product_name) AS productName,
                (sp.product_description) AS productDescription,
                (sp.price) AS price,
                (sp.main_image_url) AS mainImageUrl,
                (sp.total_quantity) AS totalQuantity,
                (sp.created_at) AS createdAt
        FROM    sp_product sp
        WHERE   sp.product_no = #{productNo} 
    </select>

    <!-- 상품 상세 이미지 -->
    <select id="detailImageFindByProductNo">
        SELECT  (spdi.image_no) AS imageNo,
                (spdi.product_no) AS productNo,
                (spdi.image_link) AS imageLink,
                (spdi.created_at) AS createdAt
        FROM    sp_product_detail_image spdi
        WHERE   spdi.product_no = #{productNo}
    </select>

    <!-- 상품구매 -->
    <insert id="createPurchase">
        <selectKey resultType="int" keyProperty="purchaseNo" order="AFTER">
            SELECT  MAX(spp.purchase_no)
            FROM    sp_product_purchase spp
            WHERE   spp.consumer_no = #{consumerNo} AND spp.state = 1
        </selectKey>
        INSERT 
        INTO    sp_product_purchase (consumer_no,product_no,quantity,shopping_adress,state)
        VALUES  (#{consumerNo},#{productNo}, #{quantity}, #{shoppingAdress},1)
    </insert>
    <!-- 상품 수량 감소 -->
    <update id="updateTotalQuantity">
        UPDATE  sp_product 
        SET     total_quantity = total_quantity - #{quantity}
        WHERE   product_no = #{productNo}

    </update>

    <!-- 고객 상품구매 목록 -->
    <select id="purchaseFindByConsumerNo" resultType="com.hr.shoppingmall.shop.dto.ShoppingPurchaseDto">
        SELECT 	(spp.purchase_no) AS purchaseNo,
                (spp.consumer_no) AS consumerNo,
                (spp.purchase_date) AS purchaseDate,
                (spp.state) AS state
        FROM 	sp_product_purchase spp 
        WHERE 	spp.consumer_no = #{consumerNo}
        ORDER BY spp.purchase_date DESC
    </select>
    
    <!-- 고객 상품 구매 상세 목록 -->
    <select id="purchaseFindByConsumerNoAndPurchaseNo" resultType="com.hr.shoppingmall.shop.dto.ShoppingPurchaseDto">
        SELECT 	(spp.purchase_no) AS purchaseNo,
                (spp.consumer_no) AS consumerNo,
                (spp.shopping_adress) AS shoppingAdress,
                (spp.purchase_date) AS purchaseDate,
                (spp.state) AS state
        FROM 	sp_product_purchase spp 
        WHERE 	spp.consumer_no = #{consumerNo}
        AND		spp.purchase_no = #{purchaseNo}
    </select>

    
    
    <!-- 상품 찜 추가-->
    <insert id="addToWishlist">
        INSERT 
        INTO    sp_product_wishlist (consumer_no, product_no)
        VALUES  (#{consumerNo}, #{productNo})
    </insert>

    <!-- 상품 찜 삭제 -->
    <delete id="removeFromWishlist">
        DELETE 
        FROM    sp_product_wishlist
        WHERE   consumer_no = #{consumerNo}
        AND     product_no = #{productNo}
    </delete>

    <!-- 상품 찜 리스트 -->
    <select id="wishlistFindByConsumerNo" resultType="com.hr.shoppingmall.shop.dto.ProductWishlistDto">
        SELECT  (spw.product_wishlist_no) AS productWishlistNo,
	            (spw.consumer_no) AS consumerNo,
	            (spw.product_no) AS productNo,
	            (spw.created_at) AS createdAt
        FROM    sp_product_wishlist spw
        WHERE   spw.consumer_no = #{consumerNo}
    </select>

    <!-- 상품 찜 검색 -->
    <select id="wishlistFindByConsumerNoAndProductNo" resultType="com.hr.shoppingmall.shop.dto.ProductWishlistDto">
        SELECT  (spw.product_wishlist_no) AS productWishlistNo,
	            (spw.consumer_no) AS consumerNo,
	            (spw.product_no) AS productNo,
	            (spw.created_at) AS createdAt
        FROM    sp_product_wishlist spw
        WHERE   spw.consumer_no = #{consumerNo}
        AND     spw.product_no = #{productNo}
    </select>

    <!-- 상품 찜 개수  -->
    <select id="wishlistCount" resultType="int">
        SELECT  COUNT(*) 
        FROM    sp_product_wishlist spw
        WHERE   product_no = #{productNo};
    </select>

    <!-- 판매자 찜 추가 -->
    <insert id="addSellerWishList">
        INSERT 
        INTO    sp_seller_wishlist (consumer_no, seller_no)
        VALUES  (#{consumerNo}, #{sellerNo})
    </insert>

    <!-- 판매자 찜 삭제 -->
    <delete id="removeSellerWishList">
        DELETE
        FROM    sp_seller_wishlist
        WHERE   consumer_no = #{consumerNo}
        AND     seller_no = #{sellerNo}
    </delete>

    <!-- 판매자 찜 유무 확인 -->
    <select id="sellerWishListFindByConsumerNoAndSellerNo" resultType="com.hr.shoppingmall.shop.dto.SellerWishListDto"> 
        SELECT  (ssw.seller_wishlist_no) AS sellerWishList,
                (ssw.consumer_no) AS consumerNo,
                (ssw.seller_no) AS sellerNo,
                (ssw.created_at) AS createdAt
        FROM    sp_seller_wishlist ssw
        WHERE   ssw.consumer_no = #{consumerNo}
        AND     ssw.seller_no = #{sellerNo}
    </select>

    <!-- 고객 판매자 찜 리스트 -->
    <select id="sellerWishListFindByConsumerNo" resultType="com.hr.shoppingmall.shop.dto.SellerWishListDto"> 
        SELECT  (ssw.seller_wishlist_no) AS sellerWishList,
                (ssw.consumer_no) AS consumerNo,
                (ssw.seller_no) AS sellerNo,
                (ssw.created_at) AS createdAt
        FROM    sp_seller_wishlist ssw
        WHERE   ssw.consumer_no = #{consumerNo}
    </select>

    <select id="productListFindBySellerNo" resultType="com.hr.shoppingmall.shop.dto.ProductDto">
        SELECT  (sp.product_no) AS productNo,
                (sp.category_no) AS categoryNo,
                (sp.category_medium_no) AS category_medium_no,
                (sp.seller_no) AS sellerNo,
                (sp.product_name) AS productName,
                (sp.product_description) AS productDescription,
                (sp.price) AS price,
                (sp.main_image_url) AS mainImageUrl,
                (sp.total_quantity) AS totalQuantity,
                (sp.created_at) AS createdAt
        FROM    sp_product sp
        WHERE  	sp.seller_no  = #{sellerNo}
        LIMIT   6
    </select>

    <!-- 남여 상품 구매 비율 -->
    <select id="avgProductPurchaseGender" resultType="double">
        SELECT  ROUND(COUNT(*) *100.0/(SELECT COUNT(*) 
						 FROM 	sp_product_purchase_list sppl
						 WHERE 	sppl.product_no = #{productNo}),1) AS AVG
        FROM 	sp_product_purchase_list sppl
        INNER JOIN sp_product_purchase spp ON spp.purchase_no = sppl.purchase_no
        INNER JOIN sp_consumer sc ON spp.consumer_no = sc.consumer_no 
        WHERE 	sppl.product_no = #{productNo}
        AND 	sc.gender = 'M'
        UNION ALL
        SELECT  ROUND(COUNT(*) *100.0/(SELECT COUNT(*) 
                                FROM 	sp_product_purchase_list sppl
                                WHERE	sppl.product_no = #{productNo}),1)
        FROM 	sp_product_purchase_list sppl
        INNER JOIN sp_product_purchase spp ON spp.purchase_no = sppl.purchase_no
        INNER JOIN sp_consumer sc ON spp.consumer_no = sc.consumer_no 
        WHERE 	sppl.product_no = #{productNo}
        AND 	sc.gender = 'F'
    </select>

    

    <!-- 장바구니 추가 -->
    <select id="addCart">
        INSERT 
        INTO    sp_cart (consumer_no, product_no, quantity)
        VALUES  (#{consumerNo}, #{productNo}, #{quantity})
    </select>

    <!-- 장바구니 삭제 -->
    <delete id="deleteCart">
        DELETE 
        FROM    sp_cart
        WHERE   cart_no = #{cartNo}
    </delete>

    <!-- 장바구니 옵션 변경 -->
    <update id="updateCart">
        UPDATE  sp_cart
        SET     quantity = #{quantity}
        WHERE   cart_no = #{cartNo}
    </update>

    <!-- 장바구니 리스트 -->
    <select id="cartFindByConsumerNo" resultType="com.hr.shoppingmall.shop.dto.CartDto">
        SELECT  (sc.cart_no) AS cartNo,
                (sc.consumer_no) AS consumerNo,
                (sc.product_no) AS productNo,
                (sc.quantity) AS quantity,
                (sc.created_at) AS createdAt
        FROM    sp_cart sc
        WHERE   sc.consumer_no = #{consumerNo}
        ORDER BY sc.created_at DESC
    </select>

    <!-- 결제 창으로 데이터 넘기기 -->
     <select id="cartFindByCartNo" resultType="com.hr.shoppingmall.shop.dto.CartDto">
        SELECT  (sc.cart_no) AS cartNo,
                (sc.consumer_no) AS consumerNo,
                (sc.product_no) AS productNo,
                (sc.quantity) AS quantity,
                (sc.created_at) AS createdAt
        FROM    sp_cart sc
        WHERE   sc.cart_no = #{cartNo}
    </select>

    <!-- 장바구니 마지막 넣은 cart 가져오기 -->
    <select id="cartNoMax" resultType="int">
        SELECT  MAX(sc.cart_no)
        FROM    sp_cart sc
        WHERE   sc.consumer_no = #{consumerNo}
    </select>

    
</mapper>